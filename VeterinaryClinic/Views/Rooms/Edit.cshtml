@model VeterinaryClinic.Models.RoomViewModel

@{
    ViewData["Title"] = "Edit";
}

<!-- Hero Area Start -->
<div style="height: 210px;" class="slider-area2 slider-height2 d-flex align-items-center">
    <div class="container">
        <div class="row">
            <div class="col-xl-12">
                <div class="hero-cap text-center pt-50">
                    <h2>Edit Pet</h2>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<flash dismissable="true" />
<div class="row">
    <div class="col-md-4 offset-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="RoomNumber" class="control-label"></label>
                <input asp-for="RoomNumber" class="form-control" id="roomNumberInput" />
                <span asp-validation-for="RoomNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TypeId" style="display: flex; flex-direction: column;" class="control-label"></label>
                <select asp-for="TypeId" asp-items="Model.Types" style="width: 100%; margin-bottom: 16px;" class="form-control"></select>
                <span asp-validation-for="TypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="form-group">
                    <label asp-for="Status" style="display: flex; flex-direction: column; margin-top: 65px;" class="control-label"></label> <br />
                    <label>
                        <input asp-for="Status" value="Available" type="radio" /> Available
                    </label>
                    <label>
                        <input asp-for="Status" value="Unvailable" type="radio" /> Unvailable
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="VetId" class="control-label"></label>
                <select asp-for="VetId" asp-items="Model.Vets" class="form-control" id="comboBox"></select>
                <span asp-validation-for="VetId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" class="button button-contactForm boxed-btn"><i class="fa fa-save"></i>Save</button>
                <a asp-action="Index" class="button button-contactForm boxed-btn"><i class="fa fa-chevron-left"></i>Back to List</a>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Manipulando o evento de mudança de valor dos RadioButtons
            $("input[type='radio']").change(function () {
                // Desmarca todos os outros RadioButtons que não são o selecionado
                $("input[type='radio']").not(this).prop('checked', false);
            });
        });
    </script>
    <script>
        // Obtém a referência para o elemento do input
        var roomNumberInput = document.getElementById("roomNumberInput");
        // Habilita o campo quando o formulário não estiver no modo de edição
        if (!@(Model.IsEditing.ToString().ToLower())) {
            roomNumberInput.readOnly = false;
        }
    </script>
    <script>
    var comboBox = document.getElementById("comboBox");

    // Função que será executada quando o valor da combobox mudar
    comboBox.addEventListener("change", function () {
        // Verifica se o valor selecionado é "Available"
        if (comboBox.value === "Available") {
          
        }
    });

    // Dispara o evento para verificar o valor inicial da combobox
    comboBox.dispatchEvent(new Event("change"));
</script>

}




